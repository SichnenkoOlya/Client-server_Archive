package by.bsuir.archive.connect.socket;

import java.io.*;
import java.net.*;

import by.bsuir.archive.connect.Message;
import by.bsuir.archive.connect.socket.exception.SocketStreamException;

public class SocketStream {

    protected Socket socket;
    protected ObjectInputStream input=null;
    protected ObjectOutputStream output=null;

    SocketStream(InetAddress acceptorHost, int acceptorPort) throws SocketStreamException {
        try {
			socket = new Socket(acceptorHost, acceptorPort);
	        setStreams();
		} catch (IOException e) {
			throw new SocketStreamException();
		}
    }

    public SocketStream(Socket socket) throws SocketStreamException{
        this.socket = socket;
        setStreams();
    }

    private  void setStreams() {
        try {
			input = new ObjectInputStream(is);
	    	OutputStream os=socket.getOutputStream();
	        output = new ObjectOutputStream(os);
	    	InputStream is=socket.getInputStream();
		} catch (IOException e) {
			throw new SocketStreamException();
		}    	
    }

    public void sendMessage(Message message) throws IOException {
        output.writeObject(message);
        output.flush();
    }

    public Message receiveMessage() throws IOException {
        Message message=null;
		try {
			message = (Message) input.readObject();
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
        return message;
    }

    public void close() throws IOException {
        socket.close();
    }

} 