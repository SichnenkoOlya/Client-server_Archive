package by.bsuir.archive.parser;

import java.util.*;

public class Node extends Object {
	private Document doc;
	private Node parent;
	private String name;
	private String text;
	private Namespace namespace;
	private List<Node> childrenNodeList;
	private List<Attribute> attrs;
	private Iterator<Attribute> attrIt;
	private Iterator<Node> nodeIt;

	/**
	 * public Node() Node constructor with no initial values.
	 */
	public Node() {

	}

	/**
	 * public Node(String name) Node constructor
	 *
	 * @param name
	 *            - the name of the Node object
	 */
	public Node(String name) {

		this.name = name;
	}

	/**
	 * public Node(String name, String text) Node constructor
	 * 
	 * @param name
	 *            - the name of the Node object
	 * @param text
	 *            - the text of the Node object
	 */
	public Node(String name, String text) {

		this.name = name;
		this.text = text;
	}

	/**
	 * public Node(Document doc, String name, String text) Node constructor
	 * 
	 * @param doc
	 *            - the Document object the Node belongs to
	 * @param name
	 *            - the name of the Node object
	 * @param text
	 *            - the text of the Node object
	 */
	public Node(Document doc, String name, String text) {

		this.doc = doc;
		this.name = name;
		this.text = text;
	}

	/**
	 * public Node(String name, String text, Node parent) Node constructor
	 * 
	 * @param name
	 *            - the name of the Node object
	 * @param text
	 *            - the text of the Node object
	 * @param parent
	 *            - a reference to the parent Node object.
	 */
	public Node(String name, String text, Node parent) {

		this.name = name;
		this.text = text;
		this.parent = parent;
	}

	/**
	 * public Node(Document doc, String name, String text, Node parent) Node
	 * constructor
	 * 
	 * @param doc
	 *            - the Document object the Node belongs to
	 * @param name
	 *            - the name of the Node object
	 * @param text
	 *            - the text of the Node object
	 * @param parent
	 *            - a reference to the parent Node object.
	 */
	public Node(Document doc, String name, String text, Node parent) {

		this.doc = doc;
		this.name = name;
		this.text = text;
		this.parent = parent;
	}

	/**
	 * public Node(String name, String text, Node parent, List<Attribute> attrs)
	 * Node constructor
	 * 
	 * @param name
	 *            - the name of the Node object
	 * @param text
	 *            - the text of the Node object
	 * @param parent
	 *            - a reference to the parent Node object.
	 * @param attr
	 *            - the list of attributes
	 */
	public Node(String name, String text, Node parent, List<Attribute> attrs) {

		this.name = name;
		this.text = text;
		this.parent = parent;
		this.attrs = attrs;
	}

	/**
	 * public Node(Document doc, String name, String text, Node parent,
	 * List<Attribute> aatrs) Node constructor
	 * 
	 * @param doc
	 *            - the Document object the Node belongs to
	 * @param name
	 *            - the name of the Node object
	 * @param text
	 *            - the text of the Node object
	 * @param parent
	 *            - a reference to the parent Node object.
	 * @param attr
	 *            - the list of attributes
	 */
	public Node(Document doc, String name, String text, Node parent, List<Attribute> attrs) {

		this.doc = doc;
		this.name = name;
		this.text = text;
		this.parent = parent;
		this.attrs = attrs;
	}

	/**
	 * public Node(String name, String text, Node parent, List<Attribute> aatrs,
	 * Namespace nm) Node constructor
	 * 
	 * @param name
	 *            - the name of the Node object
	 * @param text
	 *            - the text of the Node object
	 * @param parent
	 *            - a reference to the parent Node object.
	 * @param attr
	 *            - the list of attributes
	 * @param nm
	 *            - the Namespace object the Node references
	 */
	public Node(String name, String text, Node parent, List<Attribute> attrs, Namespace nm) {

		this.name = name;
		this.text = text;
		this.parent = parent;
		this.attrs = attrs;
		namespace = nm;
	}

	/**
	 * public Node(Document doc, String name, String text, Node parent,
	 * List<Attribute> aatrs, Namespace nm) Node constructor
	 * 
	 * @param doc
	 *            - the Document object the Node belongs to
	 * @param name
	 *            - the name of the Node object
	 * @param text
	 *            - the text of the Node object
	 * @param parent
	 *            - a reference to the parent Node object.
	 * @param attr
	 *            - the list of attributes
	 * @param nm
	 *            - the Namespace object the Node references
	 */



	public Namespace getNamespace() {

		return namespace;
	}

	public void setNamespace(Namespace n) {

		namespace = n;
	}

	public String getName() {

		return name;
	}

	public String getText() {

		return text;
	}

	public void setName(String name) {

		this.name = name;
	}

	public void setText(String text) {

		this.text = text;
	}

	public Node getParent() {

		return parent;
	}
	
	public void setParent(Node parent) {

		this.parent = parent;
	}


	public void addChild(Node child) {

		try {

			childrenNodeList.add(child);

		} catch (Exception ex) {

			/*
			 * Enter in this state only if the childrenNodeList isn't been initialized
			 * before.
			 */
			childrenNodeList = new LinkedList<Node>();
			childrenNodeList.add(child);
		}
	}


	public Node getFirstChild() {

		try {

			return childrenNodeList.get(0);
		} catch (Exception ex) {

			return null;
		}
	}

	public Node getNextChild() {

		try {

			if (nodeIt.hasNext()) {

				return nodeIt.next();
			}
		} catch (Exception e) {

			try {

				nodeIt = childrenNodeList.listIterator();
				if (nodeIt.hasNext()) {

					return nodeIt.next();
				}
			} catch (Exception ex) {

				return null;
			}
		}

		return null;
	}

	public List<Node> getChildren() {

		return childrenNodeList;
	}

	public List<Attribute> getAttributes() {

		return attrs;
	}
	
}